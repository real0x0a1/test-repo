name: CI/CD Pipeline with Telegram Notifications

on:
  pull_request:
    branches:
      - main
    types: [opened, closed, reopened, synchronize, ready_for_review]
  push:
    branches:
      - main
  issues:
    types: [opened, edited, deleted, closed, reopened]
  release:
    types: [published, created]
  workflow_run:
    workflows: ["CI/CD Pipeline with Telegram Notifications"]
    types:
      - completed

jobs:
  send_notification:
    runs-on: ubuntu-latest
    steps:
      - name: Set up job
        id: job_info
        run: echo "Job started"

      # Pull Request events
      - name: Send Telegram Message for Opened PR
        if: github.event.action == 'opened' && github.event_name == 'pull_request'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ New Pull Request Opened in ${{ github.repository }}

            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Source Branch: ${{ github.event.pull_request.head.ref }}
            Link: ${{ github.event.pull_request.html_url }}

      - name: Send Telegram Message for Closed PR
        if: github.event.action == 'closed' && github.event_name == 'pull_request'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üö´ Pull Request Closed in ${{ github.repository }}

            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Source Branch: ${{ github.event.pull_request.head.ref }}
            Merged: ${{ github.event.pull_request.merged == true && 'Yes' || 'No' }}
            Link: ${{ github.event.pull_request.html_url }}

      - name: Send Telegram Message for Reopened PR
        if: github.event.action == 'reopened' && github.event_name == 'pull_request'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üîÑ Pull Request Reopened in ${{ github.repository }}

            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Source Branch: ${{ github.event.pull_request.head.ref }}
            Link: ${{ github.event.pull_request.html_url }}

      - name: Send Telegram Message for Synchronized PR
        if: github.event.action == 'synchronize' && github.event_name == 'pull_request'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üîÑ Pull Request Updated in ${{ github.repository }}

            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Source Branch: ${{ github.event.pull_request.head.ref }}
            Link: ${{ github.event.pull_request.html_url }}

      - name: Send Telegram Message for PR Ready for Review
        if: github.event.action == 'ready_for_review' && github.event_name == 'pull_request'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üëÄ Pull Request Ready for Review in ${{ github.repository }}

            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Source Branch: ${{ github.event.pull_request.head.ref }}
            Link: ${{ github.event.pull_request.html_url }}

      # Push events
      - name: Send Telegram Message for Push
        if: github.event_name == 'push'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üì¶ New Commit Pushed to ${{ github.repository }}

            Commit: ${{ github.head_commit.message }}
            Author: ${{ github.head_commit.author.name }}
            Link: ${{ github.head_commit.url }}

      # Issues events
      - name: Send Telegram Message for Opened Issue
        if: github.event.action == 'opened' && github.event_name == 'issues'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üìù New Issue Opened in ${{ github.repository }}

            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      - name: Send Telegram Message for Edited Issue
        if: github.event.action == 'edited' && github.event_name == 'issues'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üìù Issue Edited in ${{ github.repository }}

            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      - name: Send Telegram Message for Deleted Issue
        if: github.event.action == 'deleted' && github.event_name == 'issues'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üóëÔ∏è Issue Deleted in ${{ github.repository }}

            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      - name: Send Telegram Message for Closed Issue
        if: github.event.action == 'closed' && github.event_name == 'issues'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üö´ Issue Closed in ${{ github.repository }}

            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      - name: Send Telegram Message for Reopened Issue
        if: github.event.action == 'reopened' && github.event_name == 'issues'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üîÑ Issue Reopened in ${{ github.repository }}

            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      # Release events
      - name: Send Telegram Message for Published Release
        if: github.event.action == 'published' && github.event_name == 'release'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ Release Published in ${{ github.repository }}

            Release: ${{ github.event.release.tag_name }}
            Author: ${{ github.event.release.author.login }}
            Link: ${{ github.event.release.html_url }}

      - name: Send Telegram Message for Created Release
        if: github.event.action == 'created' && github.event_name == 'release'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ Release Created in ${{ github.repository }}

            Release: ${{ github.event.release.tag_name }}
            Author: ${{ github.event.release.author.login }}
            Link: ${{ github.event.release.html_url }}

      # Workflow run events
      - name: Send Telegram Message for Completed Workflow Run
        if: github.event_name == 'workflow_run' && github.event.action == 'completed'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ Workflow Run Completed in ${{ github.repository }}

            Workflow: ${{ github.event.workflow_run.name }}
            Status: ${{ github.event.workflow_run.conclusion }}
            Link: ${{ github.event.workflow_run.html_url }}
